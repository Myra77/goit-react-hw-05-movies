{"version":3,"file":"static/js/186.c9502293.chunk.js","mappings":"8LAoCA,UAhCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAaR,OAXAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GACM,IAApBA,EAASC,OACTP,EAAW,MAGXA,EAAWM,EAElB,GACJ,GAAE,CAACL,KAGA,+BACA,2BACMF,IAAW,4DACD,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASQ,QAAS,EACXR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAST,EAApB,EAAoBA,GAApB,OACR,2BACI,8BAAMQ,EAAM,iBAAaA,GAAW,+BACpC,uBAAIC,MAFCT,EADD,IAMV,+BAIzB,C,sKChCKU,EAAM,2CACNC,EAAM,6BAECC,EAAgB,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kCAA0CD,IADvC,cACtBI,EADsB,yBAGvBA,EAAWC,MAHY,2CAAH,qDAYhBC,EAAS,mCAAG,WAAMhB,GAAN,uFACIa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHX,EADG,oBACWU,IAFf,cACfI,EADe,yBAKZA,EAAWC,MALC,2CAAH,sDAQTZ,EAAY,mCAAG,WAAMH,GAAN,uFACCa,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHX,EADG,oBACWU,IAFZ,cAClBI,EADkB,yBAKfA,EAAWC,MALI,2CAAH,sDAQZE,EAAkB,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,2BACID,EADJ,kBACiBQ,IAFZ,cACxBJ,EADwB,yBAIvBA,EAAWC,MAJY,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/FetchData.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/FetchData';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchReviews(id).then(response => {\n            if (response.length === 0) {\n                setReviews(null)\n            }\n            else {\n                setReviews(response)\n            };\n        });\n    }, [id]);\n\n    return (\n        <>\n        <ul>\n            {!reviews && <p>Sorry, there are no reviews yet</p>}\n                {reviews?.length > 0 ?\n                        reviews.map(({ author, content, id }) => (\n                            <li key={id}>\n                                <h2> {author ? `Author:${author}` : 'No information available'}</h2>\n                                <p>{content}</p> \n                            </li>        \n                        ))\n                        : 'No information available'}\n            </ul>\n        </>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = 'api_key=7c8c4a85f3e5bf51d7c8e7e89688e5d7';\nconst URL = 'https://api.themoviedb.org';\n\nexport const fetchTrendMovies = async () => {\n    const responsive = await axios.get(`${URL}/3/trending/movie/week?${KEY}`);\n\n  return responsive.data;\n};\n\nexport const fetchMovieDetails = async id => {\n    const responsive = await axios.get(`${URL}/3/movie/${id}?${KEY}`);\n\n    return responsive.data;\n  };\n\nexport const fetchCast = async id => {\n    const responsive = await axios.get(\n        `${URL}/3/movie/${id}/credits?${KEY}`\n      );\n    \n      return responsive.data;\n    };\n\nexport const fetchReviews = async id => {\n    const responsive = await axios.get(\n        `${URL}/3/movie/${id}/reviews?${KEY}`\n      );\n    \n      return responsive.data;\n    };\n\nexport const fetchMoviesByQuery = async query => {\n    const responsive = await axios.get(\n        `${URL}/3/search/movie?${KEY}&query=${query}`);\n\n    return responsive.data;\n};"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","then","response","length","map","author","content","KEY","URL","fetchTrendMovies","axios","responsive","data","fetchCast","fetchMoviesByQuery","query"],"sourceRoot":""}