{"version":3,"file":"static/js/764.eef2f399.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.jsx","components/TopMoviesList/TopMoviesList.styled.jsx","components/SearchBar/SearchMovie.jsx","pages/Movies.jsx","services/FetchData.jsx","services/GetImage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    padding: 4px;\n    width: 400px;\n    border-radius: 8px;\n    font-size: 16px;\n\n    &:focus {\n        background-color: coral;\n        color: white;\n    }\n`;\n\nexport const Button = styled.button`\n    margin-left: 10px;\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n\n    &:hover,\n    &:focus {\n        color: white;\n        background-color: coral;\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n`;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    height: 330px;\n    transition: border-color 0.3s, box-shadow 0.3s;\n\n    &:hover {\n        border-color: #aaa;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n`;\n\nexport const Title = styled.p`\n    height: 20px;\n    margin: 0;\n    padding: 5px 10px;\n    font-size: 12px;\n    background-color: rgba(0, 0, 0, 0.2);\n    color: #2a2a2a;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`;\n\nexport const Rate = styled.p`\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 0;\n    padding: 5px;\n    font-size: 12px;\n    font-weight: 500;\n    background-color: #F0E68C;\n    color: #000;\n    border-bottom-left-radius: 5px;\n`;","// import { useState, useEffect } from 'react';\n// import { useLocation, useSearchParams, Link } from 'react-router-dom';\n// import { fetchMoviesByQuery } from '../../services/FetchData';\n// import { getImage } from '../../services/GetImage';\n\n// import css from './SearchMovie.module.css';\n\n// const SearchMovie = () => {\n//     const [movies, setMovies] = useState([]);\n//     const [inputValue, setInputValue] = useState('');\n//     const [searchParams, setSearchParams] = useSearchParams();\n//     const location = useLocation();\n\n//     useEffect(() => {\n//         if (!searchParams) return;\n\n//         setInputValue(searchParams.get('query') ?? '');\n\n//         async function getMovieList() {\n//             const movieList = await fetchMoviesByQuery(searchParams.get('query'));\n//             setMovies(movieList);\n//         }\n\n//         getMovieList();\n//     }, [searchParams]);\n\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         const query = inputValue !== '' ? { query: inputValue } : {};\n//         setSearchParams(query);\n//         fetchMoviesByQuery(inputValue)\n//             .then(setMovies)\n//             .catch(console.error);\n//     };\n\n//     const handleChange = ({ target: { value } }) => {\n//         setInputValue(value);\n//     };\n\n//     return (\n//         <>\n            \n//                 <form className={css['SearchForm']} autoComplete=\"off\" onSubmit={handleSubmit}>\n//                     <input>\n//                         name=\"query\"\n//                         type=\"text\"\n//                         value={inputValue}\n//                         onChange={handleChange}\n//                         placeholder=\"Find your favorite movie\"\n//                         autoFocus\n//                     </input>\n//                     <button type=\"submit\">Search</button> \n//                 </form>\n//             <ul>\n//                 {movies.map(({ id, title, poster_path, vote_average }) => (\n//                     <li key={id}>\n//                         <Link to={`${id}`} state={{ from: location }}>\n                            \n//                             src={getImage(poster_path)} alt=\"poster\"\n                            \n                            \n//                             {title}\n                            \n                        \n//                             {vote_average}\n                            \n//                         </Link>\n//                     </li>\n//                 ))}\n//             </ul>  \n//         </>\n//     );\n// };\n\n// export default SearchMovie;\n\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImage';\nimport { Input } from './SearchBar.styled';\nimport { List, ListItem, Image, Title, Rate } from '../TopMoviesList/TopMoviesList.styled';\n\nconst SearchMovie = () => {\n    const [movies, setMovies] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!searchParams) return;\n\n        setInputValue(searchParams.get('query') ?? '');\n\n        async function getMovieList() {\n            const movieList = await fetchMoviesByQuery(searchParams.get('query'));\n            setMovies(movieList);\n        }\n\n        getMovieList();\n    }, [searchParams]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const query = inputValue !== '' ? { query: inputValue } : {};\n        setSearchParams(query);\n        fetchMoviesByQuery(inputValue)\n            .then(setMovies)\n            .catch(console.error);\n    };\n\n    const handleChange = ({ target: { value } }) => {\n        setInputValue(value);\n    };\n\n    return (\n        <>\n            \n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name=\"query\"\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={handleChange}\n                        placeholder=\"Find your movie\"\n                        autoFocus\n                    />\n                    <button type=\"submit\">Search</button>\n                </form>\n            \n            \n            <List>\n                {movies.map(({ id, title, poster_path, vote_average }) => (\n                    <ListItem key={id}>\n                        <Link to={`${id}`} state={{ from: location }}>\n                            <Image src={getImage(poster_path)} alt=\"poster\"/>\n                            <Title>{title}</Title>\n                            <Rate>{vote_average}</Rate>\n                        </Link>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n};\n\nexport default SearchMovie;","import SearchMovie from '../components/SearchBar/SearchMovie';\n\nconst Movies = () => {\n    return (\n        <>\n            <main>\n                <SearchMovie />\n            </main>\n        </>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '7c8c4a85f3e5bf51d7c8e7e89688e5d7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\n","import PropTypes from 'prop-types';\n\nexport const getImage = image => {\n    if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};\n\ngetImage.propTypes = {\n    image: PropTypes.string.isRequired,\n};"],"names":["Input","styled","List","ListItem","Image","Title","Rate","useState","movies","setMovies","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","fetchMoviesByQuery","get","movieList","getMovieList","onSubmit","e","preventDefault","query","then","catch","console","error","name","type","value","onChange","target","placeholder","autoFocus","map","id","title","poster_path","vote_average","to","state","from","src","getImage","alt","API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","fetchCast","cast","fetchReviews","image","propTypes","PropTypes"],"sourceRoot":""}