{"version":3,"file":"static/js/247.1abea6cd.chunk.js","mappings":"uMA8BA,UAzBa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUH,GAAII,KAAKL,EACtB,GAAE,CAACC,KAGA,+BACI,wBACKF,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,GAAIO,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACN,2BACI,iBAAKC,IAAKH,EAAMI,MAAO,GAAvB,kBACSC,EAAAA,EAAAA,GAASJ,OAElB,wBAAKD,KACL,uBAAIE,MALCR,EADH,OAYzB,C,mLC1BKY,EAAM,2CACNC,EAAM,6BAECC,EAAgB,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kCAA0CD,IADvC,cACtBI,EADsB,yBAGvBA,EAAWC,MAHY,2CAAH,qDAYhBd,EAAS,mCAAG,WAAMH,GAAN,uFACIe,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHb,EADG,oBACWY,IAFf,cACfI,EADe,yBAKZA,EAAWC,MALC,2CAAH,sDAQTC,EAAY,mCAAG,WAAMlB,GAAN,uFACCe,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACHb,EADG,oBACWY,IAFZ,cAClBI,EADkB,yBAKfA,EAAWC,MALI,2CAAH,sDAQZE,EAAkB,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,2BACID,EADJ,kBACiBQ,IAFZ,cACxBJ,EADwB,yBAIvBA,EAAWC,MAJY,2CAAH,qD,uFC/BlBN,EAAW,SAAAU,GACpB,GAAIA,EAAO,MAAM,kCAAN,OAAyCA,EACvD,EAEDV,EAASW,UAAY,CACjBD,MAAOE,IAAAA,OAAAA,W,mCCEX,IAAIC,EAAuBC,EAAQ,IAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIhC,KAAO,sBACLgC,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAenB,UAAYmB,EAEpBA,CACR,C,oBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,8BCNnBI,EAAOC,QAFoB,8C","sources":["components/Cast/Cast.jsx","services/FetchData.jsx","services/GetImage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImage';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchCast(id).then(setCast);\n    }, [id]);\n\n    return (\n        <>\n            <ul>\n                {cast.map(({ name, id, profile_path, character }) => (\n                    <li key={id}>\n                        <img alt={name} width={80}>\n                            src={getImage(profile_path)} \n                        </img>\n                        <h3>{name}</h3>\n                        <p>{character}</p>\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n};\n    \nexport default Cast;","import axios from 'axios';\n\nconst KEY = 'api_key=7c8c4a85f3e5bf51d7c8e7e89688e5d7';\nconst URL = 'https://api.themoviedb.org';\n\nexport const fetchTrendMovies = async () => {\n    const responsive = await axios.get(`${URL}/3/trending/movie/week?${KEY}`);\n\n  return responsive.data;\n};\n\nexport const fetchMovieDetails = async id => {\n    const responsive = await axios.get(`${URL}/3/movie/${id}?${KEY}`);\n\n    return responsive.data;\n  };\n\nexport const fetchCast = async id => {\n    const responsive = await axios.get(\n        `${URL}/3/movie/${id}/credits?${KEY}`\n      );\n    \n      return responsive.data;\n    };\n\nexport const fetchReviews = async id => {\n    const responsive = await axios.get(\n        `${URL}/3/movie/${id}/reviews?${KEY}`\n      );\n    \n      return responsive.data;\n    };\n\nexport const fetchMoviesByQuery = async query => {\n    const responsive = await axios.get(\n        `${URL}/3/search/movie?${KEY}&query=${query}`);\n\n    return responsive.data;\n};","import PropTypes from 'prop-types';\n\nexport const getImage = image => {\n    if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};\n\ngetImage.propTypes = {\n    image: PropTypes.string.isRequired,\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","then","map","name","profile_path","character","alt","width","getImage","KEY","URL","fetchTrendMovies","axios","responsive","data","fetchReviews","fetchMoviesByQuery","query","image","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}